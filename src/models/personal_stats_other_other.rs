/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersonalStatsOtherOther {
    /// This field is being replaced with 'activity'.'time' field and will be removed on 1st January 2025.
    #[serde(rename = "time_played", skip_serializing_if = "Option::is_none")]
    pub time_played: Option<i32>,
    /// This field is being replaced with 'activity'.'streak'.'current' field and will be removed on 1st January 2025.
    #[serde(rename = "current_streak", skip_serializing_if = "Option::is_none")]
    pub current_streak: Option<i32>,
    /// This field is being replaced with 'activity'.'streak'.'best' field and will be removed on 1st January 2025.
    #[serde(rename = "best_streak", skip_serializing_if = "Option::is_none")]
    pub best_streak: Option<i32>,
    #[serde(rename = "activity", skip_serializing_if = "Option::is_none")]
    pub activity: Option<Box<models::PersonalStatsOtherOtherActivity>>,
    #[serde(rename = "awards", skip_serializing_if = "Option::is_none")]
    pub awards: Option<i32>,
    #[serde(rename = "merits_bought", skip_serializing_if = "Option::is_none")]
    pub merits_bought: Option<i32>,
    #[serde(rename = "refills", skip_serializing_if = "Option::is_none")]
    pub refills: Option<Box<models::PersonalStatsOtherOtherRefills>>,
    #[serde(rename = "donator_days", skip_serializing_if = "Option::is_none")]
    pub donator_days: Option<i32>,
    #[serde(rename = "ranked_war_wins", skip_serializing_if = "Option::is_none")]
    pub ranked_war_wins: Option<i32>,
}

impl PersonalStatsOtherOther {
    pub fn new() -> PersonalStatsOtherOther {
        PersonalStatsOtherOther {
            time_played: None,
            current_streak: None,
            best_streak: None,
            activity: None,
            awards: None,
            merits_bought: None,
            refills: None,
            donator_days: None,
            ranked_war_wins: None,
        }
    }
}

