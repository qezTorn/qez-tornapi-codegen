/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TornHof {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "faction_id", skip_serializing_if = "Option::is_none")]
    pub faction_id: Option<i32>,
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<i32>,
    #[serde(rename = "last_action", skip_serializing_if = "Option::is_none")]
    pub last_action: Option<i32>,
    #[serde(rename = "rank_name", skip_serializing_if = "Option::is_none")]
    pub rank_name: Option<String>,
    #[serde(rename = "rank_number", skip_serializing_if = "Option::is_none")]
    pub rank_number: Option<i32>,
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    #[serde(rename = "signed_up", skip_serializing_if = "Option::is_none")]
    pub signed_up: Option<i32>,
    #[serde(rename = "age_in_days", skip_serializing_if = "Option::is_none")]
    pub age_in_days: Option<i32>,
    /// Value representing the chosen category. Traveltime is shown in seconds. If the chosen category is 'rank', the value is of type string. If the chosen category is 'racingskill', the value is of type float. Otherwise it is an integer.
    #[serde(rename = "value", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub value: Option<Option<serde_json::Value>>,
    #[serde(rename = "rank", skip_serializing_if = "Option::is_none")]
    pub rank: Option<String>,
}

impl TornHof {
    pub fn new() -> TornHof {
        TornHof {
            id: None,
            username: None,
            faction_id: None,
            level: None,
            last_action: None,
            rank_name: None,
            rank_number: None,
            position: None,
            signed_up: None,
            age_in_days: None,
            value: None,
            rank: None,
        }
    }
}

