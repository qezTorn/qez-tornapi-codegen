/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersonalStatsAttackingPublicAttacking {
    #[serde(rename = "attacks", skip_serializing_if = "Option::is_none")]
    pub attacks: Option<Box<models::PersonalStatsAttackingPublicAttackingAttacks>>,
    #[serde(rename = "defends", skip_serializing_if = "Option::is_none")]
    pub defends: Option<Box<models::PersonalStatsAttackingPublicAttackingDefends>>,
    #[serde(rename = "elo", skip_serializing_if = "Option::is_none")]
    pub elo: Option<i32>,
    #[serde(rename = "unarmored_wins", skip_serializing_if = "Option::is_none")]
    pub unarmored_wins: Option<i32>,
    #[serde(rename = "highest_level_beaten", skip_serializing_if = "Option::is_none")]
    pub highest_level_beaten: Option<i32>,
    #[serde(rename = "escapes", skip_serializing_if = "Option::is_none")]
    pub escapes: Option<Box<models::PersonalStatsAttackingPublicAttackingEscapes>>,
    #[serde(rename = "killstreak", skip_serializing_if = "Option::is_none")]
    pub killstreak: Option<Box<models::PersonalStatsAttackingPublicAttackingKillstreak>>,
    #[serde(rename = "hits", skip_serializing_if = "Option::is_none")]
    pub hits: Option<Box<models::PersonalStatsAttackingPublicAttackingHits>>,
    #[serde(rename = "damage", skip_serializing_if = "Option::is_none")]
    pub damage: Option<Box<models::PersonalStatsAttackingPublicAttackingDamage>>,
    #[serde(rename = "networth", skip_serializing_if = "Option::is_none")]
    pub networth: Option<Box<models::PersonalStatsAttackingPublicAttackingNetworth>>,
    #[serde(rename = "ammunition", skip_serializing_if = "Option::is_none")]
    pub ammunition: Option<Box<models::PersonalStatsAttackingPublicAttackingAmmunition>>,
    #[serde(rename = "faction", skip_serializing_if = "Option::is_none")]
    pub faction: Option<Box<models::PersonalStatsAttackingPublicAttackingFaction>>,
}

impl PersonalStatsAttackingPublicAttacking {
    pub fn new() -> PersonalStatsAttackingPublicAttacking {
        PersonalStatsAttackingPublicAttacking {
            attacks: None,
            defends: None,
            elo: None,
            unarmored_wins: None,
            highest_level_beaten: None,
            escapes: None,
            killstreak: None,
            hits: None,
            damage: None,
            networth: None,
            ammunition: None,
            faction: None,
        }
    }
}

