/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserJobRanks {
    #[serde(rename = "army", skip_serializing_if = "Option::is_none")]
    pub army: Option<models::JobPositionArmyEnum>,
    #[serde(rename = "grocer", skip_serializing_if = "Option::is_none")]
    pub grocer: Option<models::JobPositionGrocerEnum>,
    #[serde(rename = "casino", skip_serializing_if = "Option::is_none")]
    pub casino: Option<models::JobPositionCasinoEnum>,
    #[serde(rename = "medical", skip_serializing_if = "Option::is_none")]
    pub medical: Option<models::JobPositionMedicalEnum>,
    #[serde(rename = "law", skip_serializing_if = "Option::is_none")]
    pub law: Option<models::JobPositionLawEnum>,
    #[serde(rename = "education", skip_serializing_if = "Option::is_none")]
    pub education: Option<models::JobPositionEducationEnum>,
}

impl UserJobRanks {
    pub fn new() -> UserJobRanks {
        UserJobRanks {
            army: None,
            grocer: None,
            casino: None,
            medical: None,
            law: None,
            education: None,
        }
    }
}

