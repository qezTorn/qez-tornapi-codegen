/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersonalStatsFinishingHitsFinishingHits {
    #[serde(rename = "heavy_artillery", skip_serializing_if = "Option::is_none")]
    pub heavy_artillery: Option<i32>,
    #[serde(rename = "machine_guns", skip_serializing_if = "Option::is_none")]
    pub machine_guns: Option<i32>,
    #[serde(rename = "rifles", skip_serializing_if = "Option::is_none")]
    pub rifles: Option<i32>,
    #[serde(rename = "sub_machine_guns", skip_serializing_if = "Option::is_none")]
    pub sub_machine_guns: Option<i32>,
    #[serde(rename = "shotguns", skip_serializing_if = "Option::is_none")]
    pub shotguns: Option<i32>,
    #[serde(rename = "pistols", skip_serializing_if = "Option::is_none")]
    pub pistols: Option<i32>,
    #[serde(rename = "temporary", skip_serializing_if = "Option::is_none")]
    pub temporary: Option<i32>,
    #[serde(rename = "piercing", skip_serializing_if = "Option::is_none")]
    pub piercing: Option<i32>,
    #[serde(rename = "slashing", skip_serializing_if = "Option::is_none")]
    pub slashing: Option<i32>,
    #[serde(rename = "clubbing", skip_serializing_if = "Option::is_none")]
    pub clubbing: Option<i32>,
    #[serde(rename = "mechanical", skip_serializing_if = "Option::is_none")]
    pub mechanical: Option<i32>,
    #[serde(rename = "hand_to_hand", skip_serializing_if = "Option::is_none")]
    pub hand_to_hand: Option<i32>,
}

impl PersonalStatsFinishingHitsFinishingHits {
    pub fn new() -> PersonalStatsFinishingHitsFinishingHits {
        PersonalStatsFinishingHitsFinishingHits {
            heavy_artillery: None,
            machine_guns: None,
            rifles: None,
            sub_machine_guns: None,
            shotguns: None,
            pistols: None,
            temporary: None,
            piercing: None,
            slashing: None,
            clubbing: None,
            mechanical: None,
            hand_to_hand: None,
        }
    }
}

