/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserCrimeDetailsScammingZones {
    #[serde(rename = "red", skip_serializing_if = "Option::is_none")]
    pub red: Option<i32>,
    #[serde(rename = "neutral", skip_serializing_if = "Option::is_none")]
    pub neutral: Option<i32>,
    #[serde(rename = "concern", skip_serializing_if = "Option::is_none")]
    pub concern: Option<i32>,
    #[serde(rename = "sensitivity", skip_serializing_if = "Option::is_none")]
    pub sensitivity: Option<i32>,
    #[serde(rename = "temptation", skip_serializing_if = "Option::is_none")]
    pub temptation: Option<i32>,
    #[serde(rename = "hesitation", skip_serializing_if = "Option::is_none")]
    pub hesitation: Option<i32>,
    #[serde(rename = "low_reward", skip_serializing_if = "Option::is_none")]
    pub low_reward: Option<i32>,
    #[serde(rename = "medium_reward", skip_serializing_if = "Option::is_none")]
    pub medium_reward: Option<i32>,
    #[serde(rename = "high_reward", skip_serializing_if = "Option::is_none")]
    pub high_reward: Option<i32>,
}

impl UserCrimeDetailsScammingZones {
    pub fn new() -> UserCrimeDetailsScammingZones {
        UserCrimeDetailsScammingZones {
            red: None,
            neutral: None,
            concern: None,
            sensitivity: None,
            temptation: None,
            hesitation: None,
            low_reward: None,
            medium_reward: None,
            high_reward: None,
        }
    }
}

