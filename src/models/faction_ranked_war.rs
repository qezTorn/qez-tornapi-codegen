/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FactionRankedWar {
    #[serde(rename = "war_id", skip_serializing_if = "Option::is_none")]
    pub war_id: Option<i32>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i32>,
    #[serde(rename = "end", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub end: Option<Option<i32>>,
    /// The score target of the war.
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<i32>,
    #[serde(rename = "winner", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub winner: Option<Option<i32>>,
    /// The factions involved in the ranked war.
    #[serde(rename = "factions", skip_serializing_if = "Option::is_none")]
    pub factions: Option<Vec<models::FactionRankedWarParticipant>>,
}

impl FactionRankedWar {
    pub fn new() -> FactionRankedWar {
        FactionRankedWar {
            war_id: None,
            start: None,
            end: None,
            target: None,
            winner: None,
            factions: None,
        }
    }
}

