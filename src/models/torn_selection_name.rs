/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TornSelectionName : The following selections will fallback to API v1 and may change at any time: 'bank','cards','cityshops','companies','competition','dirtybombs','education','factiontree','gyms','honors','itemdetails','items','itemstats','medals','organisedcrimes','pawnshop','pokertables','properties','rackets','raidreport','raids','rankedwarreport','rankedwars','rockpaperscissors','searchforcash','shoplifting','stats','stocks','territory','territorynames','territorywarreport','territorywars'.
/// The following selections will fallback to API v1 and may change at any time: 'bank','cards','cityshops','companies','competition','dirtybombs','education','factiontree','gyms','honors','itemdetails','items','itemstats','medals','organisedcrimes','pawnshop','pokertables','properties','rackets','raidreport','raids','rankedwarreport','rankedwars','rockpaperscissors','searchforcash','shoplifting','stats','stocks','territory','territorynames','territorywarreport','territorywars'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TornSelectionName {
    #[serde(rename = "bounties")]
    Bounties,
    #[serde(rename = "calendar")]
    Calendar,
    #[serde(rename = "crimes")]
    Crimes,
    #[serde(rename = "factionHof")]
    FactionHof,
    #[serde(rename = "hof")]
    Hof,
    #[serde(rename = "logcategories")]
    Logcategories,
    #[serde(rename = "logtypes")]
    Logtypes,
    #[serde(rename = "lookup")]
    Lookup,
    #[serde(rename = "subcrimes")]
    Subcrimes,
    #[serde(rename = "timestamp")]
    Timestamp,
    #[serde(rename = "bank")]
    Bank,
    #[serde(rename = "cards")]
    Cards,
    #[serde(rename = "cityshops")]
    Cityshops,
    #[serde(rename = "companies")]
    Companies,
    #[serde(rename = "competition")]
    Competition,
    #[serde(rename = "dirtybombs")]
    Dirtybombs,
    #[serde(rename = "education")]
    Education,
    #[serde(rename = "factiontree")]
    Factiontree,
    #[serde(rename = "gyms")]
    Gyms,
    #[serde(rename = "honors")]
    Honors,
    #[serde(rename = "itemdetails")]
    Itemdetails,
    #[serde(rename = "items")]
    Items,
    #[serde(rename = "itemstats")]
    Itemstats,
    #[serde(rename = "medals")]
    Medals,
    #[serde(rename = "organisedcrimes")]
    Organisedcrimes,
    #[serde(rename = "pawnshop")]
    Pawnshop,
    #[serde(rename = "pokertables")]
    Pokertables,
    #[serde(rename = "properties")]
    Properties,
    #[serde(rename = "rackets")]
    Rackets,
    #[serde(rename = "raidreport")]
    Raidreport,
    #[serde(rename = "raids")]
    Raids,
    #[serde(rename = "rankedwarreport")]
    Rankedwarreport,
    #[serde(rename = "rankedwars")]
    Rankedwars,
    #[serde(rename = "rockpaperscissors")]
    Rockpaperscissors,
    #[serde(rename = "searchforcash")]
    Searchforcash,
    #[serde(rename = "shoplifting")]
    Shoplifting,
    #[serde(rename = "stats")]
    Stats,
    #[serde(rename = "stocks")]
    Stocks,
    #[serde(rename = "territory")]
    Territory,
    #[serde(rename = "territorynames")]
    Territorynames,
    #[serde(rename = "territorywarreport")]
    Territorywarreport,
    #[serde(rename = "territorywars")]
    Territorywars,

}

impl std::fmt::Display for TornSelectionName {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Bounties => write!(f, "bounties"),
            Self::Calendar => write!(f, "calendar"),
            Self::Crimes => write!(f, "crimes"),
            Self::FactionHof => write!(f, "factionHof"),
            Self::Hof => write!(f, "hof"),
            Self::Logcategories => write!(f, "logcategories"),
            Self::Logtypes => write!(f, "logtypes"),
            Self::Lookup => write!(f, "lookup"),
            Self::Subcrimes => write!(f, "subcrimes"),
            Self::Timestamp => write!(f, "timestamp"),
            Self::Bank => write!(f, "bank"),
            Self::Cards => write!(f, "cards"),
            Self::Cityshops => write!(f, "cityshops"),
            Self::Companies => write!(f, "companies"),
            Self::Competition => write!(f, "competition"),
            Self::Dirtybombs => write!(f, "dirtybombs"),
            Self::Education => write!(f, "education"),
            Self::Factiontree => write!(f, "factiontree"),
            Self::Gyms => write!(f, "gyms"),
            Self::Honors => write!(f, "honors"),
            Self::Itemdetails => write!(f, "itemdetails"),
            Self::Items => write!(f, "items"),
            Self::Itemstats => write!(f, "itemstats"),
            Self::Medals => write!(f, "medals"),
            Self::Organisedcrimes => write!(f, "organisedcrimes"),
            Self::Pawnshop => write!(f, "pawnshop"),
            Self::Pokertables => write!(f, "pokertables"),
            Self::Properties => write!(f, "properties"),
            Self::Rackets => write!(f, "rackets"),
            Self::Raidreport => write!(f, "raidreport"),
            Self::Raids => write!(f, "raids"),
            Self::Rankedwarreport => write!(f, "rankedwarreport"),
            Self::Rankedwars => write!(f, "rankedwars"),
            Self::Rockpaperscissors => write!(f, "rockpaperscissors"),
            Self::Searchforcash => write!(f, "searchforcash"),
            Self::Shoplifting => write!(f, "shoplifting"),
            Self::Stats => write!(f, "stats"),
            Self::Stocks => write!(f, "stocks"),
            Self::Territory => write!(f, "territory"),
            Self::Territorynames => write!(f, "territorynames"),
            Self::Territorywarreport => write!(f, "territorywarreport"),
            Self::Territorywars => write!(f, "territorywars"),
        }
    }
}

impl Default for TornSelectionName {
    fn default() -> TornSelectionName {
        Self::Bounties
    }
}

