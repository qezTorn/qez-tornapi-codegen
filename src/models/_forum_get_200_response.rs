/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ForumGet200Response {
    #[serde(rename = "categories", skip_serializing_if = "Option::is_none")]
    pub categories: Option<Vec<models::ForumCategoriesResponseCategoriesInner>>,
    #[serde(rename = "threads", skip_serializing_if = "Option::is_none")]
    pub threads: Option<Vec<models::ForumThreadBase>>,
    #[serde(rename = "_metadata", skip_serializing_if = "Option::is_none")]
    pub _metadata: Option<Box<models::RequestMetadataWithLinks>>,
    #[serde(rename = "thread", skip_serializing_if = "Option::is_none")]
    pub thread: Option<Box<models::ForumThreadExtended>>,
    #[serde(rename = "posts", skip_serializing_if = "Option::is_none")]
    pub posts: Option<Vec<models::ForumPost>>,
    #[serde(rename = "selections", skip_serializing_if = "Option::is_none")]
    pub selections: Option<Vec<models::ForumSelectionName>>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
}

impl ForumGet200Response {
    pub fn new() -> ForumGet200Response {
        ForumGet200Response {
            categories: None,
            threads: None,
            _metadata: None,
            thread: None,
            posts: None,
            selections: None,
            timestamp: None,
        }
    }
}

