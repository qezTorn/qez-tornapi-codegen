/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_repr::{Serialize_repr,Deserialize_repr};
/// ForumFeedTypeEnum : This represents the type of the activity. Values range from 1 to 8 where:  *                    1 = 'X posted on a thread',  *                    2 = 'X created a thread',  *                    3 = 'X liked your thread',  *                    4 = 'X disliked your thread',  *                    5 = 'X liked your post',  *                    6 = 'X disliked your post',  *                    7 = 'X quoted your post'.
/// This represents the type of the activity. Values range from 1 to 8 where:  *                    1 = 'X posted on a thread',  *                    2 = 'X created a thread',  *                    3 = 'X liked your thread',  *                    4 = 'X disliked your thread',  *                    5 = 'X liked your post',  *                    6 = 'X disliked your post',  *                    7 = 'X quoted your post'.
#[repr(i64)]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr)]
pub enum ForumFeedTypeEnum {
    Variant1 = 1,
    Variant2 = 2,
    Variant3 = 3,
    Variant4 = 4,
    Variant5 = 5,
    Variant6 = 6,
    Variant7 = 7,

}

impl std::fmt::Display for ForumFeedTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", match self {
            Self::Variant1 => "1",
            Self::Variant2 => "2",
            Self::Variant3 => "3",
            Self::Variant4 => "4",
            Self::Variant5 => "5",
            Self::Variant6 => "6",
            Self::Variant7 => "7",
        })
    }
}
impl Default for ForumFeedTypeEnum {
    fn default() -> ForumFeedTypeEnum {
        Self::Variant1
    }
}

