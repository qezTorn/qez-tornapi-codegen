/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UserLastAction : Details about a user's last action.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserLastAction {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
    #[serde(rename = "relative", skip_serializing_if = "Option::is_none")]
    pub relative: Option<String>,
}

impl UserLastAction {
    /// Details about a user's last action.
    pub fn new() -> UserLastAction {
        UserLastAction {
            status: None,
            timestamp: None,
            relative: None,
        }
    }
}

