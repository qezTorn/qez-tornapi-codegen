/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserCrimeDetailsCracking {
    #[serde(rename = "brute_force_cycles", skip_serializing_if = "Option::is_none")]
    pub brute_force_cycles: Option<i32>,
    #[serde(rename = "encryption_layers_broken", skip_serializing_if = "Option::is_none")]
    pub encryption_layers_broken: Option<i32>,
    #[serde(rename = "highest_mips", skip_serializing_if = "Option::is_none")]
    pub highest_mips: Option<i32>,
    #[serde(rename = "chars_guessed", skip_serializing_if = "Option::is_none")]
    pub chars_guessed: Option<i32>,
    #[serde(rename = "chars_guessed_total", skip_serializing_if = "Option::is_none")]
    pub chars_guessed_total: Option<i32>,
}

impl UserCrimeDetailsCracking {
    pub fn new() -> UserCrimeDetailsCracking {
        UserCrimeDetailsCracking {
            brute_force_cycles: None,
            encryption_layers_broken: None,
            highest_mips: None,
            chars_guessed: None,
            chars_guessed_total: None,
        }
    }
}

