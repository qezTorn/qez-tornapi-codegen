/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TornCrime {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "category_id", skip_serializing_if = "Option::is_none")]
    pub category_id: Option<i32>,
    #[serde(rename = "category_name", skip_serializing_if = "Option::is_none")]
    pub category_name: Option<String>,
    #[serde(rename = "enhancer_id", skip_serializing_if = "Option::is_none")]
    pub enhancer_id: Option<i32>,
    #[serde(rename = "enhancer_name", skip_serializing_if = "Option::is_none")]
    pub enhancer_name: Option<String>,
    #[serde(rename = "unique_outcomes_count", skip_serializing_if = "Option::is_none")]
    pub unique_outcomes_count: Option<i32>,
    #[serde(rename = "unique_outcomes_ids", skip_serializing_if = "Option::is_none")]
    pub unique_outcomes_ids: Option<Vec<i32>>,
    #[serde(rename = "notes", skip_serializing_if = "Option::is_none")]
    pub notes: Option<Vec<String>>,
}

impl TornCrime {
    pub fn new() -> TornCrime {
        TornCrime {
            id: None,
            name: None,
            category_id: None,
            category_name: None,
            enhancer_id: None,
            enhancer_name: None,
            unique_outcomes_count: None,
            unique_outcomes_ids: None,
            notes: None,
        }
    }
}

