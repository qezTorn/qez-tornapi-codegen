/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FactionSelectionName : The following selections will fallback to API v1 and may change at any time: 'armor', 'boosters', 'caches', 'cesium', 'contributors', 'crimeexp', 'currency', 'donations', 'drugs', 'medical', 'positions', 'rankedwars', 'reports', 'revives', 'revivesfull', 'stats', 'temporary', 'upgrades', 'weapons'.
/// The following selections will fallback to API v1 and may change at any time: 'armor', 'boosters', 'caches', 'cesium', 'contributors', 'crimeexp', 'currency', 'donations', 'drugs', 'medical', 'positions', 'rankedwars', 'reports', 'revives', 'revivesfull', 'stats', 'temporary', 'upgrades', 'weapons'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FactionSelectionName {
    #[serde(rename = "applications")]
    Applications,
    #[serde(rename = "attacks")]
    Attacks,
    #[serde(rename = "attacksfull")]
    Attacksfull,
    #[serde(rename = "basic")]
    Basic,
    #[serde(rename = "chain")]
    Chain,
    #[serde(rename = "chainreport")]
    Chainreport,
    #[serde(rename = "chains")]
    Chains,
    #[serde(rename = "crimes")]
    Crimes,
    #[serde(rename = "hof")]
    Hof,
    #[serde(rename = "lookup")]
    Lookup,
    #[serde(rename = "members")]
    Members,
    #[serde(rename = "news")]
    News,
    #[serde(rename = "territory")]
    Territory,
    #[serde(rename = "timestamp")]
    Timestamp,
    #[serde(rename = "wars")]
    Wars,
    #[serde(rename = "armor")]
    Armor,
    #[serde(rename = "boosters")]
    Boosters,
    #[serde(rename = "caches")]
    Caches,
    #[serde(rename = "cesium")]
    Cesium,
    #[serde(rename = "contributors")]
    Contributors,
    #[serde(rename = "crimeexp")]
    Crimeexp,
    #[serde(rename = "currency")]
    Currency,
    #[serde(rename = "donations")]
    Donations,
    #[serde(rename = "drugs")]
    Drugs,
    #[serde(rename = "medical")]
    Medical,
    #[serde(rename = "positions")]
    Positions,
    #[serde(rename = "rankedwars")]
    Rankedwars,
    #[serde(rename = "reports")]
    Reports,
    #[serde(rename = "revives")]
    Revives,
    #[serde(rename = "revivesfull")]
    Revivesfull,
    #[serde(rename = "stats")]
    Stats,
    #[serde(rename = "temporary")]
    Temporary,
    #[serde(rename = "upgrades")]
    Upgrades,
    #[serde(rename = "weapons")]
    Weapons,

}

impl std::fmt::Display for FactionSelectionName {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Applications => write!(f, "applications"),
            Self::Attacks => write!(f, "attacks"),
            Self::Attacksfull => write!(f, "attacksfull"),
            Self::Basic => write!(f, "basic"),
            Self::Chain => write!(f, "chain"),
            Self::Chainreport => write!(f, "chainreport"),
            Self::Chains => write!(f, "chains"),
            Self::Crimes => write!(f, "crimes"),
            Self::Hof => write!(f, "hof"),
            Self::Lookup => write!(f, "lookup"),
            Self::Members => write!(f, "members"),
            Self::News => write!(f, "news"),
            Self::Territory => write!(f, "territory"),
            Self::Timestamp => write!(f, "timestamp"),
            Self::Wars => write!(f, "wars"),
            Self::Armor => write!(f, "armor"),
            Self::Boosters => write!(f, "boosters"),
            Self::Caches => write!(f, "caches"),
            Self::Cesium => write!(f, "cesium"),
            Self::Contributors => write!(f, "contributors"),
            Self::Crimeexp => write!(f, "crimeexp"),
            Self::Currency => write!(f, "currency"),
            Self::Donations => write!(f, "donations"),
            Self::Drugs => write!(f, "drugs"),
            Self::Medical => write!(f, "medical"),
            Self::Positions => write!(f, "positions"),
            Self::Rankedwars => write!(f, "rankedwars"),
            Self::Reports => write!(f, "reports"),
            Self::Revives => write!(f, "revives"),
            Self::Revivesfull => write!(f, "revivesfull"),
            Self::Stats => write!(f, "stats"),
            Self::Temporary => write!(f, "temporary"),
            Self::Upgrades => write!(f, "upgrades"),
            Self::Weapons => write!(f, "weapons"),
        }
    }
}

impl Default for FactionSelectionName {
    fn default() -> FactionSelectionName {
        Self::Applications
    }
}

