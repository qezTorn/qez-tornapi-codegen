/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FactionChainReportDetails {
    #[serde(rename = "chain", skip_serializing_if = "Option::is_none")]
    pub chain: Option<i32>,
    #[serde(rename = "respect", skip_serializing_if = "Option::is_none")]
    pub respect: Option<f32>,
    #[serde(rename = "members", skip_serializing_if = "Option::is_none")]
    pub members: Option<i32>,
    #[serde(rename = "targets", skip_serializing_if = "Option::is_none")]
    pub targets: Option<i32>,
    #[serde(rename = "war", skip_serializing_if = "Option::is_none")]
    pub war: Option<i32>,
    #[serde(rename = "best", skip_serializing_if = "Option::is_none")]
    pub best: Option<f32>,
    #[serde(rename = "leave", skip_serializing_if = "Option::is_none")]
    pub leave: Option<i32>,
    #[serde(rename = "mug", skip_serializing_if = "Option::is_none")]
    pub mug: Option<i32>,
    #[serde(rename = "hospitalize", skip_serializing_if = "Option::is_none")]
    pub hospitalize: Option<i32>,
    #[serde(rename = "assists", skip_serializing_if = "Option::is_none")]
    pub assists: Option<i32>,
    #[serde(rename = "retaliations", skip_serializing_if = "Option::is_none")]
    pub retaliations: Option<i32>,
    #[serde(rename = "overseas", skip_serializing_if = "Option::is_none")]
    pub overseas: Option<i32>,
    #[serde(rename = "draws", skip_serializing_if = "Option::is_none")]
    pub draws: Option<i32>,
    #[serde(rename = "escapes", skip_serializing_if = "Option::is_none")]
    pub escapes: Option<i32>,
    #[serde(rename = "losses", skip_serializing_if = "Option::is_none")]
    pub losses: Option<i32>,
}

impl FactionChainReportDetails {
    pub fn new() -> FactionChainReportDetails {
        FactionChainReportDetails {
            chain: None,
            respect: None,
            members: None,
            targets: None,
            war: None,
            best: None,
            leave: None,
            mug: None,
            hospitalize: None,
            assists: None,
            retaliations: None,
            overseas: None,
            draws: None,
            escapes: None,
            losses: None,
        }
    }
}

