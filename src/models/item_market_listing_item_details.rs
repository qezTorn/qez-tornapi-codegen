/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemMarketListingItemDetails {
    /// This field will be removed on Monday, 20th January 2025.
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<i32>,
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<models::ItemMarketListingItemStats>>,
    #[serde(rename = "bonuses", skip_serializing_if = "Option::is_none")]
    pub bonuses: Option<Vec<models::ItemMarketListingItemBonus>>,
    #[serde(rename = "rarity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rarity: Option<Option<Rarity>>,
}

impl ItemMarketListingItemDetails {
    pub fn new() -> ItemMarketListingItemDetails {
        ItemMarketListingItemDetails {
            uid: None,
            stats: None,
            bonuses: None,
            rarity: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Rarity {
    #[serde(rename = "yellow")]
    Yellow,
    #[serde(rename = "orange")]
    Orange,
    #[serde(rename = "red")]
    Red,
}

impl Default for Rarity {
    fn default() -> Rarity {
        Self::Yellow
    }
}

