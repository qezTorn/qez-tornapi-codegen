/*
 * Torn API
 *
 *   * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersonalStatsNetworthExtendedNetworth {
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
    #[serde(rename = "wallet", skip_serializing_if = "Option::is_none")]
    pub wallet: Option<i32>,
    #[serde(rename = "vaults", skip_serializing_if = "Option::is_none")]
    pub vaults: Option<i32>,
    #[serde(rename = "bank", skip_serializing_if = "Option::is_none")]
    pub bank: Option<i32>,
    #[serde(rename = "overseas_bank", skip_serializing_if = "Option::is_none")]
    pub overseas_bank: Option<i32>,
    #[serde(rename = "points", skip_serializing_if = "Option::is_none")]
    pub points: Option<i32>,
    #[serde(rename = "inventory", skip_serializing_if = "Option::is_none")]
    pub inventory: Option<i32>,
    #[serde(rename = "display_case", skip_serializing_if = "Option::is_none")]
    pub display_case: Option<i32>,
    #[serde(rename = "bazaar", skip_serializing_if = "Option::is_none")]
    pub bazaar: Option<i32>,
    #[serde(rename = "item_market", skip_serializing_if = "Option::is_none")]
    pub item_market: Option<i32>,
    #[serde(rename = "property", skip_serializing_if = "Option::is_none")]
    pub property: Option<i32>,
    #[serde(rename = "stock_market", skip_serializing_if = "Option::is_none")]
    pub stock_market: Option<i32>,
    #[serde(rename = "auction_house", skip_serializing_if = "Option::is_none")]
    pub auction_house: Option<i32>,
    #[serde(rename = "bookie", skip_serializing_if = "Option::is_none")]
    pub bookie: Option<i32>,
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<i32>,
    #[serde(rename = "enlisted_cars", skip_serializing_if = "Option::is_none")]
    pub enlisted_cars: Option<i32>,
    #[serde(rename = "piggy_bank", skip_serializing_if = "Option::is_none")]
    pub piggy_bank: Option<i32>,
    #[serde(rename = "pending", skip_serializing_if = "Option::is_none")]
    pub pending: Option<i32>,
    #[serde(rename = "loans", skip_serializing_if = "Option::is_none")]
    pub loans: Option<i32>,
    #[serde(rename = "unpaid_fees", skip_serializing_if = "Option::is_none")]
    pub unpaid_fees: Option<i32>,
}

impl PersonalStatsNetworthExtendedNetworth {
    pub fn new() -> PersonalStatsNetworthExtendedNetworth {
        PersonalStatsNetworthExtendedNetworth {
            total: None,
            wallet: None,
            vaults: None,
            bank: None,
            overseas_bank: None,
            points: None,
            inventory: None,
            display_case: None,
            bazaar: None,
            item_market: None,
            property: None,
            stock_market: None,
            auction_house: None,
            bookie: None,
            company: None,
            enlisted_cars: None,
            piggy_bank: None,
            pending: None,
            loans: None,
            unpaid_fees: None,
        }
    }
}

